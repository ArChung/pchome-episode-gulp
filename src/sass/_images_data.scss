// =================================================================
// This file is dynamically generated by gulp-compass-imagehelper
// Do NOT edit!
// =================================================================

// Returns if the image is accessible for these image-helpers
// Note: Not part of the official compass functions, but still useful
@function image-exists($image) {
  @return map-has-key($compass-imagehelper-imagesmap, $image);
}

// Returns the width of the image found at the path supplied by $image relative to your project's images directory.
@function image-width($image) {
  @if image-exists($image) {
    $list: map-get($compass-imagehelper-imagesmap, $image);
    $width: unquote(map-get($list, 'width'));
    @if ($width and str-length($width) > 0) {
      @return number($width) * 1px;
    }
  }
  @warn "Image '#{$image}' not found.";
  @return null;
}

// Returns the height of the image found at the path supplied by $image relative to your project's images directory.
@function image-height($image) {
  @if image-exists($image) {
    $list: map-get($compass-imagehelper-imagesmap, $image);
    $height: unquote(map-get($list, 'height'));
    @if ($height and str-length($height) > 0) {
      @return number($height) * 1px;
    }
  }
  @warn "Image '#{$image}' not found.";
  @return null;
}

// Generates a path to an asset found relative to the project's images directory.
// Passing a true value as the second argument will cause only the path to be returned instead of a url() function
// The third argument is used to control the cache buster on a per-use basis. When set to false no cache buster will be used.
// When true a md5-hash of the file is appended to the url. When a string, that value will be used as the cache buster.
@function image-url($image, $only-path: false, $cache-buster: false) {
  $result: $compass-imagehelper-path-prefix + $image;

  @if not(image-exists($image)) {
    @warn "Image '#{$image}' not found.";
  } @else {
    @if (type-of($cache-buster) == string) {
      $result: $result + '?' + $cache-buster;
    }

    @if ($cache-buster == true) {
      $list: map-get($compass-imagehelper-imagesmap, $image);
      $hash: map-get($list, 'hash');
      $result: $result + '?' + $hash;
    }
  }

  $result: quote($result);

  @if ($only-path == false) {
    $result: url($result);
  }

  @return $result;
}

// Two helper functions for casting string to number by Hugo Giraudel
// http://hugogiraudel.com/2014/01/15/sass-string-to-number/
// http://sassmeister.com/gist/9647408
@function _length($number, $unit) {
  $strings: 'px' 'cm' 'mm' '%' 'ch' 'pica' 'in' 'em' 'rem' 'pt' 'pc' 'ex' 'vw' 'vh' 'vmin' 'vmax';
  $units: 1px 1cm 1mm 1% 1ch 1 pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;
  $index: index($strings, $unit);

  @if not ($index) {
    @warn "Unknown unit `#{$unit}`.";
    @return false;
  }

  @return $number * nth($units, $index);
}

@function number($string) {
  // Matrices
  $strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';
  $numbers: 0 1 2 3 4 5 6 7 8 9;

  // Result
  $result: 0;
  $divider: 0;
  $minus: false;

  // Looping through all characters
  @for $i from 1 through str-length($string) {
    $character: str-slice($string, $i, $i);
    $index: index($strings, $character);

    @if $character == '-' {
      $minus: true;
    } @else if $character == '.' {
      $divider: 1;
    } @else {
      @if not ($index) {
        $result: if($minus, $result * -1, $result);
        @return _length($result, str-slice($string, $i));
      }

      $number: nth($numbers, $index);

      @if $divider == 0 {
        $result: $result * 10;
      } @else {
        // Move the decimal dot to the left
        $divider: $divider * 10;
        $number: $number / $divider;
      }

      $result: $result + $number;
    }
  }

  @return if($minus, $result * -1, $result);
}

$compass-imagehelper-path-prefix: '../images/';

$compass-imagehelper-imagesmap: (
  'f-1.jpg': (
    width: '600',
    height: '338',
    hash: '3cc3ad194674705be9c9d2ad95ced7e9'
  ),
  'f-2.jpg': (
    width: '600',
    height: '338',
    hash: 'b1eb140cd384735ff78eadf1cbd5f124'
  ),
  'f-3.jpg': (
    width: '600',
    height: '338',
    hash: '21fe6c80d86f877a162120947d30532e'
  ),
  'f-4.jpg': (
    width: '600',
    height: '338',
    hash: '405e5f1472af91c37ec132255b3a044c'
  ),
  'f-5.jpg': (
    width: '600',
    height: '338',
    hash: '896f3468c6ba6ada8f99dc66a998740e'
  ),
  'kv-BAK.jpg': (
    width: '1140',
    height: '713',
    hash: '059d8a991fc04c0840c2b898ac5a9a18'
  ),
  'kv.jpg': (
    width: '1440',
    height: '900',
    hash: '4e6aa24937e4e88624fa324f25f248dc'
  ),
  'm-1.jpg': (
    width: '300',
    height: '495',
    hash: '31eb513282ad6d56188e696ad5dde64c'
  ),
  'm-2.jpg': (
    width: '300',
    height: '495',
    hash: '50105f9882c6b7bb1d8a877a02c74123'
  ),
  'm-3.jpg': (
    width: '300',
    height: '495',
    hash: 'dc11f26c43d51fda283f2e8dbdb28ac2'
  ),
  'm-4.jpg': (
    width: '300',
    height: '495',
    hash: '312e0ea689604ec24e915fc178e045fe'
  ),
  'm-5.jpg': (
    width: '1040',
    height: '644',
    hash: 'd32c514015a80ee28bed7c93c0eac985'
  ),
  'owl.video.play.png': (
    width: '80',
    height: '80',
    hash: '4a37f8008959c75f619bf0a3a4e2d7a2'
  ),
  'pro-1.jpg': (
    width: '400',
    height: '430',
    hash: '6e8945dcc39a76b04e416abee32e30b3'
  ),
  '正片/第一集.jpg': (
    width: '6000',
    height: '3376',
    hash: '528e2ca7b1f1a5c0902c2ca8ee7598a3'
  ),
  '正片/第三集.jpg': (
    width: '4848',
    height: '2728',
    hash: '4e5b52fa93c844f4572472743a7ffec7'
  ),
  '正片/第二集.jpg': (
    width: '6000',
    height: '3376',
    hash: '8c72737077c5f9c3538c5dc9b52b1441'
  ),
  '正片/第五集.jpg': (
    width: '5376',
    height: '3307',
    hash: '97982a5d4292b05d2ea6cf4078c675f6'
  ),
  '正片/第四集.jpg': (
    width: '6000',
    height: '3376',
    hash: '7dcd564ab104f40463095f4aa995bf07'
  ),
  '人物介紹/Gaby.jpg': (
    width: '5609',
    height: '3286',
    hash: 'f4e3142a1b0f4e306cc50042df67ca9b'
  ),
  '人物介紹/吳宜樺.jpg': (
    width: '6000',
    height: '3376',
    hash: 'ae2bc60fd84f9e5306283462d8eae078'
  ),
  '人物介紹/導演.jpg': (
    width: '6000',
    height: '3376',
    hash: '2efa26b97aeee51c130d3fe936ade3ab'
  ),
  '人物介紹/小傑.jpg': (
    width: '5525',
    height: '3109',
    hash: '06d0767b69742d84281966f7382fea29'
  ),
  '人物介紹/張鈞甯.jpg': (
    width: '5865',
    height: '3300',
    hash: '6d59de426d576aa5b4dd7ebf9754a514'
  ),
);

%f-1-jpg {
  // Available properties:
  // prefix: ;
  // width: 600;
  // height: 338;
  // filename: f-1.jpg;
  // basename: f-1;
  // dirname: images;
  // ext: .jpg;
  // path: f-1.jpg;
  // fullname: f-1-jpg;
  // mime: image/jpeg;
  // hash: 3cc3ad194674705be9c9d2ad95ced7e9;
  background-image: image-url('f-1.jpg');
}

%f-2-jpg {
  // Available properties:
  // prefix: ;
  // width: 600;
  // height: 338;
  // filename: f-2.jpg;
  // basename: f-2;
  // dirname: images;
  // ext: .jpg;
  // path: f-2.jpg;
  // fullname: f-2-jpg;
  // mime: image/jpeg;
  // hash: b1eb140cd384735ff78eadf1cbd5f124;
  background-image: image-url('f-2.jpg');
}

%f-3-jpg {
  // Available properties:
  // prefix: ;
  // width: 600;
  // height: 338;
  // filename: f-3.jpg;
  // basename: f-3;
  // dirname: images;
  // ext: .jpg;
  // path: f-3.jpg;
  // fullname: f-3-jpg;
  // mime: image/jpeg;
  // hash: 21fe6c80d86f877a162120947d30532e;
  background-image: image-url('f-3.jpg');
}

%f-4-jpg {
  // Available properties:
  // prefix: ;
  // width: 600;
  // height: 338;
  // filename: f-4.jpg;
  // basename: f-4;
  // dirname: images;
  // ext: .jpg;
  // path: f-4.jpg;
  // fullname: f-4-jpg;
  // mime: image/jpeg;
  // hash: 405e5f1472af91c37ec132255b3a044c;
  background-image: image-url('f-4.jpg');
}

%f-5-jpg {
  // Available properties:
  // prefix: ;
  // width: 600;
  // height: 338;
  // filename: f-5.jpg;
  // basename: f-5;
  // dirname: images;
  // ext: .jpg;
  // path: f-5.jpg;
  // fullname: f-5-jpg;
  // mime: image/jpeg;
  // hash: 896f3468c6ba6ada8f99dc66a998740e;
  background-image: image-url('f-5.jpg');
}

%kv-BAK-jpg {
  // Available properties:
  // prefix: ;
  // width: 1140;
  // height: 713;
  // filename: kv-BAK.jpg;
  // basename: kv-BAK;
  // dirname: images;
  // ext: .jpg;
  // path: kv-BAK.jpg;
  // fullname: kv-BAK-jpg;
  // mime: image/jpeg;
  // hash: 059d8a991fc04c0840c2b898ac5a9a18;
  background-image: image-url('kv-BAK.jpg');
}

%kv-jpg {
  // Available properties:
  // prefix: ;
  // width: 1440;
  // height: 900;
  // filename: kv.jpg;
  // basename: kv;
  // dirname: images;
  // ext: .jpg;
  // path: kv.jpg;
  // fullname: kv-jpg;
  // mime: image/jpeg;
  // hash: 4e6aa24937e4e88624fa324f25f248dc;
  background-image: image-url('kv.jpg');
}

%m-1-jpg {
  // Available properties:
  // prefix: ;
  // width: 300;
  // height: 495;
  // filename: m-1.jpg;
  // basename: m-1;
  // dirname: images;
  // ext: .jpg;
  // path: m-1.jpg;
  // fullname: m-1-jpg;
  // mime: image/jpeg;
  // hash: 31eb513282ad6d56188e696ad5dde64c;
  background-image: image-url('m-1.jpg');
}

%m-2-jpg {
  // Available properties:
  // prefix: ;
  // width: 300;
  // height: 495;
  // filename: m-2.jpg;
  // basename: m-2;
  // dirname: images;
  // ext: .jpg;
  // path: m-2.jpg;
  // fullname: m-2-jpg;
  // mime: image/jpeg;
  // hash: 50105f9882c6b7bb1d8a877a02c74123;
  background-image: image-url('m-2.jpg');
}

%m-3-jpg {
  // Available properties:
  // prefix: ;
  // width: 300;
  // height: 495;
  // filename: m-3.jpg;
  // basename: m-3;
  // dirname: images;
  // ext: .jpg;
  // path: m-3.jpg;
  // fullname: m-3-jpg;
  // mime: image/jpeg;
  // hash: dc11f26c43d51fda283f2e8dbdb28ac2;
  background-image: image-url('m-3.jpg');
}

%m-4-jpg {
  // Available properties:
  // prefix: ;
  // width: 300;
  // height: 495;
  // filename: m-4.jpg;
  // basename: m-4;
  // dirname: images;
  // ext: .jpg;
  // path: m-4.jpg;
  // fullname: m-4-jpg;
  // mime: image/jpeg;
  // hash: 312e0ea689604ec24e915fc178e045fe;
  background-image: image-url('m-4.jpg');
}

%m-5-jpg {
  // Available properties:
  // prefix: ;
  // width: 1040;
  // height: 644;
  // filename: m-5.jpg;
  // basename: m-5;
  // dirname: images;
  // ext: .jpg;
  // path: m-5.jpg;
  // fullname: m-5-jpg;
  // mime: image/jpeg;
  // hash: d32c514015a80ee28bed7c93c0eac985;
  background-image: image-url('m-5.jpg');
}

%owl-video-play-png {
  // Available properties:
  // prefix: ;
  // width: 80;
  // height: 80;
  // filename: owl.video.play.png;
  // basename: owl.video.play;
  // dirname: images;
  // ext: .png;
  // path: owl.video.play.png;
  // fullname: owl-video-play-png;
  // mime: image/png;
  // hash: 4a37f8008959c75f619bf0a3a4e2d7a2;
  background-image: image-url('owl.video.play.png');
}

%pro-1-jpg {
  // Available properties:
  // prefix: ;
  // width: 400;
  // height: 430;
  // filename: pro-1.jpg;
  // basename: pro-1;
  // dirname: images;
  // ext: .jpg;
  // path: pro-1.jpg;
  // fullname: pro-1-jpg;
  // mime: image/jpeg;
  // hash: 6e8945dcc39a76b04e416abee32e30b3;
  background-image: image-url('pro-1.jpg');
}

%正片-第一集-jpg {
  // Available properties:
  // prefix: ;
  // width: 6000;
  // height: 3376;
  // filename: 第一集.jpg;
  // basename: 第一集;
  // dirname: 正片;
  // ext: .jpg;
  // path: 正片/第一集.jpg;
  // fullname: 正片-第一集-jpg;
  // mime: image/jpeg;
  // hash: 528e2ca7b1f1a5c0902c2ca8ee7598a3;
  background-image: image-url('正片/第一集.jpg');
}

%正片-第三集-jpg {
  // Available properties:
  // prefix: ;
  // width: 4848;
  // height: 2728;
  // filename: 第三集.jpg;
  // basename: 第三集;
  // dirname: 正片;
  // ext: .jpg;
  // path: 正片/第三集.jpg;
  // fullname: 正片-第三集-jpg;
  // mime: image/jpeg;
  // hash: 4e5b52fa93c844f4572472743a7ffec7;
  background-image: image-url('正片/第三集.jpg');
}

%正片-第二集-jpg {
  // Available properties:
  // prefix: ;
  // width: 6000;
  // height: 3376;
  // filename: 第二集.jpg;
  // basename: 第二集;
  // dirname: 正片;
  // ext: .jpg;
  // path: 正片/第二集.jpg;
  // fullname: 正片-第二集-jpg;
  // mime: image/jpeg;
  // hash: 8c72737077c5f9c3538c5dc9b52b1441;
  background-image: image-url('正片/第二集.jpg');
}

%正片-第五集-jpg {
  // Available properties:
  // prefix: ;
  // width: 5376;
  // height: 3307;
  // filename: 第五集.jpg;
  // basename: 第五集;
  // dirname: 正片;
  // ext: .jpg;
  // path: 正片/第五集.jpg;
  // fullname: 正片-第五集-jpg;
  // mime: image/jpeg;
  // hash: 97982a5d4292b05d2ea6cf4078c675f6;
  background-image: image-url('正片/第五集.jpg');
}

%正片-第四集-jpg {
  // Available properties:
  // prefix: ;
  // width: 6000;
  // height: 3376;
  // filename: 第四集.jpg;
  // basename: 第四集;
  // dirname: 正片;
  // ext: .jpg;
  // path: 正片/第四集.jpg;
  // fullname: 正片-第四集-jpg;
  // mime: image/jpeg;
  // hash: 7dcd564ab104f40463095f4aa995bf07;
  background-image: image-url('正片/第四集.jpg');
}

%人物介紹-Gaby-jpg {
  // Available properties:
  // prefix: ;
  // width: 5609;
  // height: 3286;
  // filename: Gaby.jpg;
  // basename: Gaby;
  // dirname: 人物介紹;
  // ext: .jpg;
  // path: 人物介紹/Gaby.jpg;
  // fullname: 人物介紹-Gaby-jpg;
  // mime: image/jpeg;
  // hash: f4e3142a1b0f4e306cc50042df67ca9b;
  background-image: image-url('人物介紹/Gaby.jpg');
}

%人物介紹-吳宜樺-jpg {
  // Available properties:
  // prefix: ;
  // width: 6000;
  // height: 3376;
  // filename: 吳宜樺.jpg;
  // basename: 吳宜樺;
  // dirname: 人物介紹;
  // ext: .jpg;
  // path: 人物介紹/吳宜樺.jpg;
  // fullname: 人物介紹-吳宜樺-jpg;
  // mime: image/jpeg;
  // hash: ae2bc60fd84f9e5306283462d8eae078;
  background-image: image-url('人物介紹/吳宜樺.jpg');
}

%人物介紹-導演-jpg {
  // Available properties:
  // prefix: ;
  // width: 6000;
  // height: 3376;
  // filename: 導演.jpg;
  // basename: 導演;
  // dirname: 人物介紹;
  // ext: .jpg;
  // path: 人物介紹/導演.jpg;
  // fullname: 人物介紹-導演-jpg;
  // mime: image/jpeg;
  // hash: 2efa26b97aeee51c130d3fe936ade3ab;
  background-image: image-url('人物介紹/導演.jpg');
}

%人物介紹-小傑-jpg {
  // Available properties:
  // prefix: ;
  // width: 5525;
  // height: 3109;
  // filename: 小傑.jpg;
  // basename: 小傑;
  // dirname: 人物介紹;
  // ext: .jpg;
  // path: 人物介紹/小傑.jpg;
  // fullname: 人物介紹-小傑-jpg;
  // mime: image/jpeg;
  // hash: 06d0767b69742d84281966f7382fea29;
  background-image: image-url('人物介紹/小傑.jpg');
}

%人物介紹-張鈞甯-jpg {
  // Available properties:
  // prefix: ;
  // width: 5865;
  // height: 3300;
  // filename: 張鈞甯.jpg;
  // basename: 張鈞甯;
  // dirname: 人物介紹;
  // ext: .jpg;
  // path: 人物介紹/張鈞甯.jpg;
  // fullname: 人物介紹-張鈞甯-jpg;
  // mime: image/jpeg;
  // hash: 6d59de426d576aa5b4dd7ebf9754a514;
  background-image: image-url('人物介紹/張鈞甯.jpg');
}

